@model DebtMan.DomainModel.Debtor

@{
    ViewBag.Title = "Create debtor";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/CreditorEditor.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Debtor</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Income)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Income)
            @Html.ValidationMessageFor(model => model.Income)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Expenditure)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Expenditure)
            @Html.ValidationMessageFor(model => model.Expenditure)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Company)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Company,
            new SelectListItem[]
            {
                new SelectListItem() { Text = "McDermott and Godfrey", Value = DebtMan.DomainModel.Company.CompanyA.ToString() },
                new SelectListItem() { Text = "DebtDestructor", Value = DebtMan.DomainModel.Company.CompanyB.ToString() },
                new SelectListItem() { Text = "MoneyHelper", Value = DebtMan.DomainModel.Company.CompanyC.ToString() }
            })
            @Html.ValidationMessageFor(model => model.Company)
        </div>

        <hr />

        <div class="display-label">Creditors</div>
        <div id="creditorEditorRows">
                @foreach (var item in Model.Creditors) {
                    Html.RenderPartial("CreditorEditorRow", item);
                }
        </div>
    
        <p>
            @Html.ActionLink("Add another creditor...", "AddCreditorEditorRow", null, new { id = "addCreditorEditorRow" })
        </p>

        <p>
            <input type="submit" value="Create" />
        </p>

    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
